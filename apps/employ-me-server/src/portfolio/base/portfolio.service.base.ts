/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Portfolio as PrismaPortfolio } from "@prisma/client";

export class PortfolioServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PortfolioCountArgs, "select">
  ): Promise<number> {
    return this.prisma.portfolio.count(args);
  }

  async portfolios(
    args: Prisma.PortfolioFindManyArgs
  ): Promise<PrismaPortfolio[]> {
    return this.prisma.portfolio.findMany(args);
  }
  async portfolio(
    args: Prisma.PortfolioFindUniqueArgs
  ): Promise<PrismaPortfolio | null> {
    return this.prisma.portfolio.findUnique(args);
  }
  async createPortfolio(
    args: Prisma.PortfolioCreateArgs
  ): Promise<PrismaPortfolio> {
    return this.prisma.portfolio.create(args);
  }
  async updatePortfolio(
    args: Prisma.PortfolioUpdateArgs
  ): Promise<PrismaPortfolio> {
    return this.prisma.portfolio.update(args);
  }
  async deletePortfolio(
    args: Prisma.PortfolioDeleteArgs
  ): Promise<PrismaPortfolio> {
    return this.prisma.portfolio.delete(args);
  }
}
