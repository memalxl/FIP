/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Vacancy as PrismaVacancy } from "@prisma/client";

export class VacancyServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.VacancyCountArgs, "select">): Promise<number> {
    return this.prisma.vacancy.count(args);
  }

  async vacancies(args: Prisma.VacancyFindManyArgs): Promise<PrismaVacancy[]> {
    return this.prisma.vacancy.findMany(args);
  }
  async vacancy(
    args: Prisma.VacancyFindUniqueArgs
  ): Promise<PrismaVacancy | null> {
    return this.prisma.vacancy.findUnique(args);
  }
  async createVacancy(args: Prisma.VacancyCreateArgs): Promise<PrismaVacancy> {
    return this.prisma.vacancy.create(args);
  }
  async updateVacancy(args: Prisma.VacancyUpdateArgs): Promise<PrismaVacancy> {
    return this.prisma.vacancy.update(args);
  }
  async deleteVacancy(args: Prisma.VacancyDeleteArgs): Promise<PrismaVacancy> {
    return this.prisma.vacancy.delete(args);
  }
}
