/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, JobSeeker as PrismaJobSeeker } from "@prisma/client";

export class JobSeekerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.JobSeekerCountArgs, "select">
  ): Promise<number> {
    return this.prisma.jobSeeker.count(args);
  }

  async jobSeekers(
    args: Prisma.JobSeekerFindManyArgs
  ): Promise<PrismaJobSeeker[]> {
    return this.prisma.jobSeeker.findMany(args);
  }
  async jobSeeker(
    args: Prisma.JobSeekerFindUniqueArgs
  ): Promise<PrismaJobSeeker | null> {
    return this.prisma.jobSeeker.findUnique(args);
  }
  async createJobSeeker(
    args: Prisma.JobSeekerCreateArgs
  ): Promise<PrismaJobSeeker> {
    return this.prisma.jobSeeker.create(args);
  }
  async updateJobSeeker(
    args: Prisma.JobSeekerUpdateArgs
  ): Promise<PrismaJobSeeker> {
    return this.prisma.jobSeeker.update(args);
  }
  async deleteJobSeeker(
    args: Prisma.JobSeekerDeleteArgs
  ): Promise<PrismaJobSeeker> {
    return this.prisma.jobSeeker.delete(args);
  }
}
